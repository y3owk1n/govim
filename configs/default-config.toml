# GoVim Configuration — Mini Docs
#
# Copy locations:
#   - macOS: ~/Library/Application Support/govim/config.toml
#   - XDG:   ~/.config/govim/config.toml
# Or pass a custom path via the CLI: `govim launch --config /path/to/config.toml`
#
# Conventions
# - Colors: `#RGB`, `#RRGGBB`, or `#RRGGBBAA`.
# - Hotkeys: `Modifier+...+Key` with modifiers `Cmd`, `Ctrl`, `Alt`, `Shift`, `Option`.
#   Examples: `Cmd+Shift+Space`, `Ctrl+D`. Set to "" to disable.
[general]
# Characters used to build hint labels for alphabet style.
# - At least 2 characters; choose distinct, easy-to-type ones.
hint_characters = "asdfghjkl"

# Check Accessibility permission on startup; exits with guidance if missing.
accessibility_check_on_start = true

[accessibility]
# Global accessibility roles that are treated as clickable
# These roles will be used for ALL applications
# Users can add or remove roles as needed
clickable_roles = [
    "AXButton",
    "AXCheckBox",
    "AXRadioButton",
    "AXPopUpButton",
    "AXMenuItem",
    "AXMenuBarItem",
    "AXDockItem",
    "AXApplicationDockItem",
    "AXLink",
    "AXTextField",
    "AXTextArea",
]

# Global accessibility roles that are treated as scrollable
# These roles will be used for ALL applications
# Users can add or remove roles as needed
scrollable_roles = [
    "AXScrollArea",
]

# Per-app role configurations
# These allow you to add additional clickable/scrollable roles for specific applications
# The roles defined here are ADDED to the global roles above (not replaced)
# To find an app's bundle ID, run: osascript -e 'id of app "AppName"'

# For example, in `Mail.app`, lots of element are `AXStaticText` and they should be clickable. In this case, we don't want to add to the global one, as it will causes lots of unclickable hints, especially in browser space.
# [[accessibility.app_configs]]
# bundle_id = "com.apple.mail"
# additional_clickable_roles = ["AXStaticText"]
# # You can also add scrollable roles scoped to the app:
# # additional_scrollable_roles = ["AXScrollArea"]

[accessibility.electron_support]
## Electron & Chromium support
# Enables manual accessibility toggles for Electron-like apps.
# Built-in: VS Code, Windsurf, Slack, Cursor, Spotify, Obsidian, Firefox.
enable = true

# Extra bundle IDs requiring Electron-style accessibility.
# Examples: ["com.example.app"]
additional_bundles = []

[hotkeys]
# all hotkeys can be disabled by either setting the key to "" or just commenting it out

# Activate hint mode (direct click)
activate_hint_mode = "Cmd+Shift+Space"

# Activate hint mode with action selection (choose click type after typing hint)
activate_hint_mode_with_actions = "Cmd+Shift+A"

# Activate scroll mode for vim-style scrolling
activate_scroll_mode = "Cmd+Shift+J"

# Note: Escape key is hardcoded to exit any active mode

# Hotkey format notes:
# - Use `Cmd`, `Ctrl`, `Alt`, `Shift`, or `Option` as modifiers.
# - Keys can be letters, function keys, or names like `Space`.
# - Set any hotkey to "" to disable that action.

[hints]
# Font size for hint labels
# Valid range: 6–72
font_size = 12

# Font family (leave empty for system default)
font_family = ""

# Background color (hex format)
background_color = "#FFD700"

# Text color (hex format)
text_color = "#000000"

# Matched text color - color for characters that have been typed (hex format)
matched_text_color = "#0066CC"

# Border radius (pixels)
# Non-negative integer
border_radius = 4

# Padding (pixels)
# Non-negative integer
padding = 4

# Border width (pixels)
# Non-negative integer
border_width = 1

# Border color (hex format)
border_color = "#000000"

# Opacity (0.0 to 1.0)
# Controls hint translucency; 1.0 is fully opaque
opacity = 0.95

# Action overlay colors (used when selecting click type)
# Background color (hex format)
action_background_color = "#66CCFF"

# Text color (hex format)
action_text_color = "#000000"

# Matched text color (hex format)
action_matched_text_color = "#003366"

# Border color (hex format)
action_border_color = "#000000"

# Opacity (0.0 to 1.0)
action_opacity = 0.95

# Action keys for hint mode with actions (hardcoded):
#   l = left click, r = right click, d = double click, m = middle click

# Include additional targets in hint mode
# Show hints on the macOS menu bar
menubar = false
# Show hints on the Dock
dock = false
# Tip: enable both to interact with menu bar and Dock via hints.

[scroll]
# Base scroll amount for j/k keys in pixels
# Minimum: 1. Increase for faster per-press scrolling.
scroll_speed = 50

# Highlight the active scroll area with a border
# When true, draws a border around the detected scroll container.
highlight_scroll_area = true

# Highlight border color (hex format)
highlight_color = "#FF0000"

# Highlight border width in pixels
highlight_width = 2

# Estimated page height in pixels (used for calculating Ctrl+D/U scroll distance)
# Increase if your app windows are taller; decrease for short panes.
page_height = 1200

# Half-page scroll multiplier for Ctrl+D/U (0.5 = 600px with default page_height)
# Valid range: (0, 1]
half_page_multiplier = 0.5

# Full-page scroll multiplier (not currently used)
# Valid range: (0, 1]
full_page_multiplier = 0.9

# Number of scroll events to send for gg/G commands
# Higher values create longer smooth scrolls to edges.
scroll_to_edge_iterations = 20

# Pixels to scroll per iteration for gg/G (total = iterations * delta)
# Increase for faster edge scrolling; tune with iterations above.
scroll_to_edge_delta = 5000

[performance]
# Maximum number of hints to display
# Minimum: 1. Higher values increase CPU and memory usage.
max_hints_displayed = 500

# Debounce time for UI updates (milliseconds)
# Lower feels snappier; higher reduces CPU during rapid changes.
debounce_ms = 50

# Cache duration for UI element tree (milliseconds)
# Trade-off between freshness and performance.
cache_duration_ms = 100

# Maximum concurrent element queries
# Minimum: 1. Controls parallelism when scanning accessibility elements.
max_concurrent_queries = 10

[logging]
# Log level: "debug", "info", "warn", "error"
# Use "debug" for troubleshooting; default is "info".
log_level = "info"

# Log file location (empty for default: ~/Library/Logs/govim/app.log)
# Set a custom path to redirect logs elsewhere; directories are created as needed.
log_file = ""

# Enable structured logging
structured_logging = true
# When true, file logs use a structured (JSON) encoder; console remains readable.
# When false, console uses a development-friendly formatter.
